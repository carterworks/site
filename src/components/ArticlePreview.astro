---
import type { CollectionEntry } from "astro:content";
interface Props {
  post: CollectionEntry<"blog">;
  content?: "small" | "none";
  className?: string;
}
const { post, className, content = "none", ...props }: Props = Astro.props;

const tags = post.data.tags?.map((tag: string) => `#${tag}`).join(" ") ?? "";
---

<a
  href={`/blog/${post.id}/`}
  class={`theme-2025:flex theme-2025:flex-row theme-2025:no-underline theme-2025:gap-1 theme-2025:flex-wrap ${className}`}
  {...props}
>
  {post.data.title && <p class="theme-2025:underline">{post.data.title}</p>}
  <p>
    <time
      datetime={post.data.pubDate.toString()}
      is="formatted-date"
    ></time>
  </p>
  {tags && <p>{tags}</p>}
  {
    content !== "none" && (
      <article class:list={["prose"]}>
        <Fragment set:html={post.rendered?.html ?? post.body} />
      </article>
    )
  }
</a>
