---
import Button from "../../components/Button.astro";
import DownloadAs from "../../components/DownloadAs.astro";
import BlogPostLayout from "../../layouts/BlogPostLayout.astro";
import { getArticle } from "../../services/clipper";
import {
	generateObsidianContents,
	generateObsidianUri,
} from "../../services/obsidian";
import { createFilename, isUrl } from "../../shared/utils";
export const prerender = false;

const { urlToClip } = Astro.params;
if (!urlToClip || !isUrl(urlToClip)) {
	return Astro.redirect(`/404?url=${encodeURIComponent(urlToClip)}`);
}
const article = await getArticle(
	new URL(urlToClip),
	Astro.locals.runtime.env.articles,
);
if (!article) {
	return Astro.redirect(`/404?url=${encodeURIComponent(urlToClip)}`);
}

const metadata = [article.author, new URL(article.url).hostname].filter(
	Boolean,
);
const markdownContent = generateObsidianContents(article);
const obsidianUri = generateObsidianUri(markdownContent, article.title);
const plainTextContent = `${article.title}\n\n${article.textContent}`;
const frontmatter = {
	title: article.title,
	description: article.description,
	pubDate: article.published ?? article.createdAt ?? new Date(),
	tags: article.tags,
	originalUrl: article.url,
	additionalMetadata: metadata,
};
---

<BlogPostLayout title={frontmatter.title} frontmatter={frontmatter}>
	<div slot="controls" class="flex flex-wrap items-center gap-2">
		<Button link href={obsidianUri}> Save to Obsidian </>
		<DownloadAs
			
			contents={markdownContent}
			filename={`${createFilename(article.title)}.md`}
		>
			Download as .md
		</D>
		<DownloadAs
			contents={plainTextContent}
			filename={`${createFilename(article.title)}.txt`}
		>
			Download as .txt
		</DownloadAs>
	</div>
	<Fragment set:html={article.htmlContent} />
</BlogPostLayout>
